plugins {
    id 'java-library'
    id 'maven-publish'
    id 'signing'
    id "com.github.blueboxware.tocme" version "1.2" // For TOC in README
    id 'io.codearte.nexus-staging' version '0.22.0' // For Sonatype publishing
    id "de.marcphilipp.nexus-publish" version "0.4.0" // For Sonatype publishing
}

group 'de.unruh'
version '0.1.0-RC1'

repositories {
    mavenCentral()
}

dependencies {
    compileOnly 'org.jetbrains:annotations:19.0.0'
    testImplementation 'org.jetbrains:annotations:19.0.0'
    testImplementation "org.junit.jupiter:junit-jupiter-api:5.7.0"
    testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine:5.7.0"
}

java {
    withJavadocJar()
    withSourcesJar()

}

compileJava {
    options.release = 8
}

compileTestJava {
    options.release = 9
}

test {
    useJUnitPlatform()
}

tocme {
    doc(file("README.md"))
}

/*

===== Steps when releasing a release/release candidate: =====

 - git checkout release-candidate
 - If this is the first RC for a new release, reset release-candidate to master
 - Update CHANGELOG.md if needed
 - Set correct date (today) for this version in CHANGELOG.md (only for releases)
 - Edit version in README.md
 - git commit (to be able to cherry pick those into master)
 - Set version in version.sbt
 - git commit
 - ./gradlew clean
 - ./gradlew test
 - ./gradlew publish closeAndReleaseRepository (errors might be found here: https://oss.sonatype.org/#stagingRepositories)
 - git tag vXXX (XXX is the version)
 - git push origin vXXX
 - git push
 - git checkout master
 - Cherry pick commit with edits to CHANGELOG.md and README.md
 - Check (a while later): https://mvnrepository.com/artifact/de.unruh/scala-isabelle

===== Put this into ~/.gradle/gradle.properties for publishing to work: =====

signing.keyId=4BA66FE2
signing.password=******************
signing.secretKeyRingFile=/home/unruh/.gnupg/secring.gpg

ossrhUsername=unruh
ossrhPassword=******************

===== And if needed, run: =====

cd ~/.gnupg/
gpg --export-secret-keys -o secring.gpg

*/


// Potentially useful: https://sasbury.github.io/notes/2019/gradle_travis_sonatype.html

publishing {
    publications {
       javaPatterns(MavenPublication) {
           from components.java
           pom {
               artifactId = 'java-patterns'
               name = 'Java Patterns'
               description = "Functional pattern matching in Java"
               url = "https://github.com/dominique-unruh/java-patterns"
               licenses {
                   license {
                       name = "MIT"
                       url = "https://raw.githubusercontent.com/dominique-unruh/java-patterns/655c7cc5c71eb9ea0fcfee0ae797269e61845d8a/LICENSE"
                   }
               }
               developers {
                   developer {
                       id = "unruh"
                       name = "Dominique Unruh"
                       email = "dominique@unruh.de"
                       url = "https://www.ut.ee/~unruh/"
                   }
               }
               scm { url = "https://github.com/dominique-unruh/java-patterns" }
           }
       }
    }
}

signing {
    sign publishing.publications.javaPatterns
}

nexusStaging {
    packageGroup = group
    username = "unruh"
    password = project.properties.ossrhPassword
}

nexusPublishing {
    repositories {
        sonatype()
    }
}

javadoc {
    // Based on https://stackoverflow.com/a/56641766/2646248, workaround against broken links from Javadoc search
    doLast {
        // Append the fix to the file
        def searchScript = new File(destinationDir.getAbsolutePath() + '/search.js')
        searchScript.append 'getURLPrefix = function(ui) { return ""; };\n'
    }
}